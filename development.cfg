[buildout]
index = http://packages.lizardsystem.nl
extends =
    http://packages.lizardsystem.nl/kgs/3.1.15/versions.cfg
    server.cfg
find-links =
unzip = true
prefer-final = true
versions = versions
extensions =
    mr.developer
    buildout-versions
parts =
    sysegg
    mkdir
    django
    omelette
    console_scripts
    pyflakes
    sphinx
    pydev
    ${buildout:serverparts}
develop = .
eggs =
    ddsc-worker
auto-checkout =
    cassandralib
    ddsc-core
    lizard-security
    tslib


[versions]
# Specific pins. We inherit lots of pins from the KGS, so if you add a
# development egg, you really need to un-pin it here.
ddsc-worker =
celery = 3.0.12
kombu =
anyjson =

# Reported by buildout-versions


[sources]
cassandralib = git git@github.com:nens/cassandralib.git
ddsc-core = git git@github.com:ddsc/ddsc-core.git
lizard-security = git git@github.com:lizardsystem/lizard-security.git branch=ddsc
tslib = git git@github.com:nens/tslib.git


[sysegg]
# Add eggs here that are best handled through OS-level packages.
recipe = osc.recipe.sysegg
force-sysegg = true
eggs =
    psycopg2
#     matplotlib
#     PIL
#     pyproj


[mkdir]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/static
    ${buildout:directory}/var/media
    ${buildout:directory}/var/log
    ${buildout:directory}/var/sqlite


[serverconfig]
# Configuration for setting up gunicorn, supervisor etc.
# For the gunicorn port, check on the server in the other sites as
# there should be no overlap. And simply give the supervisor port one
# number higher.
gunicorn-port = TODO
supervisor-port = TODO
sitename = TODO
workers = 3


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
wsgi = true
wsgilog = ${buildout:directory}/var/log/django.log
project = ddsc_worker
projectegg = ddsc_worker
settings = developmentsettings
test = ddsc_worker
eggs = ddsc-worker


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
    celery
# Development tools
    createcoverage
    pep8
    zest.releaser
    sitesetup
    fabric
initialization = 
    import os
    os.environ['DJANGO_SETTINGS_MODULE'] = '${django:project}.${django:settings}'


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}


[pydev]
recipe = pb.recipes.pydev
eggs = ${buildout:eggs}
pydevproject_path = ${buildout:directory}/.pydevproject
extra_paths =
